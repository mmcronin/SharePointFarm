{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "The region to deploy the resources into"
      },
      "defaultValue": "North Europe"
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Virtual Network to Create"
      },
      "defaultValue": "adVNET"
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the new VNET "
      },
      "defaultValue": "10.0.0.0/16"
    },
    "adVmName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Domain Controller"
      },
      "defaultValue": "clientsqa-dc"
    },
    "adSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the AD subnet created in the new VNET"
      },
      "defaultValue": "10.0.0.0/24"
    },
    "sqlSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the SQL subnet created in the new VNET"
      },
      "defaultValue": "10.0.1.0/24"
    },
    "adNicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new AD VM"
      },
      "defaultValue": "10.0.0.4"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VM and Domain"
      },
      "defaultValue": "adadmin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password forthe Administrator account of the new VM and Domain"
      }
    },
    "adVMSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the AD VM Created"
      },
      "defaultValue": "Standard_DS1_V2"
    },
    "sqlVmName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Domain Controller"
      },
      "defaultValue": "clientsqa-sql"
    },
    "sqlVMSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the SQL VM Created"
      },
      "defaultValue": "Standard_DS2_V2"
    },
    "sqlServerServiceAccountUserName": {
      "type": "string",
      "metadata": {
        "description": "The SQL Server Service account name"
      },
      "defaultValue": "sqlservice"
    },
    "sqlServerServiceAccountPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The SQL Server Service account password"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD Domain created "
      },
      "defaultValue": "clientsqa.test"
    },
    "baseUrl": {
      "type": "string",
      "metadata": {
        "artifactsBaseUrl": "",
        "description": "URL to acquire other templates"
      },
      "defaultValue": "https://raw.githubusercontent.com/mmcronin/DCandSQL/master/DCandSQL"
    },
    "storageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Name prefix of the new storage account created to store the VMs disks"
      },
      "defaultValue": "adsta"
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Premium_LRS"
    }
  },
  "variables": {
    "assetLocation": "[concat(parameters('baseURL'),'/dsc')]",
    "adVMName": "[parameters('adVmName')]",
    "sqlVMName": "[parameters('sqlVmName')]",
    "LBFE": "LBFE",
    "LBBE": "LBBE",
    "RDPNAT": "RDP",
    "adSubnetName": "adSubnet",
    "sqlSubnetName": "sqlSubnet",
    "adNicName": "adNic",
    "sqlNicName": "sqlNic",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "adSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('adSubnetName'))]",
    "sqlSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('sqlSubnetName'))]",
    "adNicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('adNicName'))]",
    "sqlNicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('sqlNicName'))]",
    "adLBName": "adLoadBalancer",
    "sqlLBName": "sqlLoadBalancer",
    "adIPConfigID": "[concat(variables('adNicId'),'/ipConfigurations/ipconfig1')]",
    "adlbID": "[resourceId('Microsoft.Network/loadBalancers',variables('adLBName'))]",
    "adlbFEConfigID": "[concat(variables('adlbID'),'/frontendIPConfigurations/',variables('LBFE'))]",
    "adRDPNATRuleID": "[concat(variables('adlbID'),'/inboundNatRules/',variables('RDPNAT'))]",
    "adBEAddressPoolID": "[concat(variables('adlbID'),'/backendAddressPools/',variables('LBBE'))]",
    "sqlIPConfigID": "[concat(variables('sqlNicId'),'/ipConfigurations/ipconfig1')]",
    "sqllbID": "[resourceId('Microsoft.Network/loadBalancers',variables('sqlLBName'))]",
    "sqllbFEConfigID": "[concat(variables('sqllbID'),'/frontendIPConfigurations/',variables('LBFE'))]",
    "sqlRDPNATRuleID": "[concat(variables('sqllbID'),'/inboundNatRules/',variables('RDPNAT'))]",
    "sqlBEAddressPoolID": "[concat(variables('sqllbID'),'/backendAddressPools/',variables('LBBE'))]",
    "adDataDisk": "ADDataDisk",
    "adDataDiskSize": 127,
    "sqlDataDisk": "SQLDataDisk",
    "sqlDataDiskSize": 127,
    "sqlLogDisk": "SQLLogDisk",
    "sqlLogDiskSize": 127,
    "adpublicIPAddressName": "adpublicIP",
    "sqlpublicIPAddressName": "sqlpublicIP",
    "adAvailabilitySetName": "adAvailabiltySet",
    "sqlAvailabilitySetName": "sqlAvailabiltySet",
    "publicIPAddressType": "Dynamic",
    "subnets": [
      {
        "name": "[variables('adSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('adSubnet')]"
        }
      },
      {
        "name": "[variables('sqlSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('sqlSubnet')]"
        }
      }
    ],
    "adModulesURL": "[concat(variables('assetLocation'),'/CreateADPDC.ps1.zip')]",
    "adConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
    "sqlConfigureModulesURL": "[concat(variables('assetLocation'),'/ConfigureSqlServer.ps1.zip')]",
    "sqlConfigurationFunction": "ConfigureSqlServer.ps1\\ConfigureSqlServer",
    "sqlPrepareModulesURL": "[concat(variables('assetLocation'),'/PrepareSqlServer.ps1.zip')]",
    "sqlPreparationFunction": "PrepareSqlServer.ps1\\PrepareSqlServer",
    "storageAccountSetupURL": "[concat(parameters('baseUrl'),'/storageAccount.json')]",
    "creatingPublicIPsUrl": "[concat(parameters('baseUrl'),'/creatingPublicIPs.json')]",
    "vnetwithDNSTemplateUrl": "[concat(parameters('baseUrl'),'/vnet-with-dns-server.json')]",
    "CreatingAvailabilitySetsUrl": "[concat(parameters('baseUrl'),'/availabilitySets.json')]",
    "vnetSetupURL": "[concat(parameters('baseUrl'),'/vnet-new.json')]",
    "setupLBsUrl": "[concat(parameters('baseUrl'),'/loadBalancers.json')]",
    "creatingNICSUrl": "[concat(parameters('baseUrl'),'/creatingNICS.json')]",
    "ProvisioningADDomainControllerUrl": "[concat(parameters('baseUrl'),'/provisioningDomainController.json')]",
    "ProvisioningSQLUrl": "[concat(parameters('baseUrl'),'/provisioningSQL.json')]",
    "configuringSQLUrl": "[concat(parameters('baseUrl'),'/configuringSQL.json')]"
  },
  "resources": [
    {
      "name": "SettingUpStorageAccount",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('storageAccountSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          },
          "storageAccountNamePrefix": {
            "value": "[parameters('storageAccountNamePrefix')]"
          }
        }
      }
    },
    {
      "name": "SettingUpPublicIPs",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('creatingPublicIPsUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "adpublicIPAddressName": {
            "value": "[variables('adpublicIPAddressName')]"
          },
          "sqlpublicIPAddressName": {
            "value": "[variables('sqlpublicIPAddressName')]"
          },
          "publicIPAddressType": {
            "value": "[variables('publicIPAddressType')]"
          }
        }
      }
    },
    {
      "name": "CreatingAvailabilitySets",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('CreatingAvailabilitySetsUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "adAvailabilitySetName": {
            "value": "[variables('adAvailabilitySetName')]"
          },
          "sqlAvailabilitySetName": {
            "value": "[variables('sqlAvailabilitySetName')]"
          }
        }
      }
    },
    {
      "name": "SettingUpVirtualNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          }
        }
      }
    },
    {
      "name": "SettingUpLoadBalancers",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SettingUpPublicIPs"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('setupLBsUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "sqllbName": {
            "value": "[variables('sqllbName')]"
          },
          "LBFE": {
            "value": "[variables('LBFE')]"
          },
          "LBBE": {
            "value": "[variables('LBBE')]"
          },
          "RDPNAT": {
            "value": "[variables('RDPNAT')]"
          },
          "adlbName": {
            "value": "[variables('adlbName')]"
          },
          "adPublicIpResourceId": {
            "value": "[reference('SettingUpPublicIPs').outputs.adPublicIpResourceId.value]"
          },
          "sqlPublicIpResourceId": {
            "value": "[reference('SettingUpPublicIPs').outputs.sqlPublicIpResourceId.value]"
          }
        }
      }
    },
    {
      "name": "CreatingNetworkInterfaces",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SettingUpVirtualNetwork",
        "Microsoft.Resources/deployments/SettingUpLoadBalancers",
        "Microsoft.Resources/deployments/SettingUpVirtualNetwork"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('creatingNICSUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "adNicName": {
            "value": "[variables('adNicName')]"
          },
          "adNicIPAddress": {
            "value": "[parameters('adNicIPAddress')]"
          },
          "adSubnetRef": {
            "value": "[variables('adSubnetRef')]"
          },
          "adBEAddressPoolID": {
            "value": "[variables('adBEAddressPoolID')]"
          },
          "adRDPNATRuleID": {
            "value": "[variables('adRDPNATRuleID')]"
          },
          "sqlNicName": {
            "value": "[variables('sqlNicName')]"
          },
          "sqlSubnetRef": {
            "value": "[variables('sqlSubnetRef')]"
          },
          "sqlBEAddressPoolID": {
            "value": "[variables('sqlBEAddressPoolID')]"
          },
          "sqlRDPNATRuleID": {
            "value": "[variables('sqlRDPNATRuleID')]"
          }
        }
      }
    },
    {
      "name": "ProvisioningADDomainController",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SettingUpStorageAccount",
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
        "Microsoft.Resources/deployments/CreatingAvailabilitySets",
        "Microsoft.Resources/deployments/SettingUpLoadBalancers"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('ProvisioningADDomainControllerUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "adVMName": {
            "value": "[variables('adVMName')]"
          },
          "adVMSize": {
            "value": "[parameters('adVMSize')]"
          },
          "adAvailabilitySetName": {
            "value": "[variables('adAvailabilitySetName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "storageAccountNamePrefix": {
            "value": "[parameters('storageAccountNamePrefix')]"
          },
          "adDataDisk": {
            "value": "[variables('adDataDisk')]"
          },
          "adNicName": {
            "value": "[variables('adNicName')]"
          },
          "adModulesURL": {
            "value": "[variables('adModulesURL')]"
          },
          "adConfigurationFunction": {
            "value": "[variables('adConfigurationFunction')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          }
        }
      }
    },
    {
      "name": "ProvisioningSQLServerVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SettingUpStorageAccount",
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
        "Microsoft.Resources/deployments/CreatingAvailabilitySets",
        "Microsoft.Resources/deployments/SettingUpLoadBalancers"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('ProvisioningSQLUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "sqlVMName": {
            "value": "[variables('sqlVMName')]"
          },
          "sqlVMSize": {
            "value": "[parameters('sqlVMSize')]"
          },
          "sqlAvailabilitySetName": {
            "value": "[variables('sqlAvailabilitySetName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "storageAccountNamePrefix": {
            "value": "[parameters('storageAccountNamePrefix')]"
          },
          "sqlDataDisk": {
            "value": "[variables('sqlDataDisk')]"
          },
          "sqlLogDisk": {
            "value": "[variables('sqlLogDisk')]"
          },
          "sqlNicName": {
            "value": "[variables('sqlNicName')]"
          },
          "sqlPrepareModulesURL": {
            "value": "[variables('sqlPrepareModulesURL')]"
          },
          "sqlPreparationFunction": {
            "value": "[variables('sqlPreparationFunction')]"
          },
          "DNSServerAddress": {
            "value": "[parameters('adNicIPAddress')]"
          }
        }
      }
    },
    {
      "name": "UpdatingDNStoPrimaryADVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ProvisioningADDomainController",
        "Microsoft.Resources/deployments/ProvisioningSQLServerVM"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetwithDNSTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "DNSServerAddress": {
            "value": [
              "[parameters('adNicIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "ConfiguringSQLServerVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ProvisioningSQLServerVM",
        "Microsoft.Resources/deployments/UpdatingDNStoPrimaryADVM"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuringSQLUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "sqlVMName": {
            "value": "[variables('sqlVMName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "sqlConfgureModulesURL": {
            "value": "[variables('sqlConfigureModulesURL')]"
          },
          "sqlConfigurationFunction": {
            "value": "[variables('sqlConfigurationFunction')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "sqlServerServiceAccountUserName": {
            "value": "[parameters('sqlServerServiceAccountUserName')]"
          },
          "sqlServerServiceAccountPassword": {
            "value": "[parameters('sqlServerServiceAccountPassword')]"
          }
        }
      }
    }
  ]
}
